# Here is an example nginx configuration that redirects all HTTP traffic to HTTPS and sets some security-related headers:

server {
    listen 80;
    server_name example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name example.com;

    ssl_certificate /path/to/cert.pem;
    ssl_certificate_key /path/to/cert.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "DENY";

    # Add your application specific configurations here
}


# In the above configuration:

# The first server block listens on port 80 and redirects all incoming requests to the equivalent HTTPS URL.
# The second server block listens on port 443 (HTTPS) and serves the actual content of the website.
# The ssl_certificate and ssl_certificate_key directives specify the path to the SSL certificate and key files, respectively.
# The add_header directives set various security-related headers. For example, the Strict-Transport-Security header instructs browsers to only communicate with the website over HTTPS for the specified number of seconds (in this case, one year).
# You should replace "example.com" with your own domain name and adjust the paths to the SSL certificate and key files as needed.
# This is a basic configuration that should work for most simple use cases. For more complex configurations, you may need to add additional server blocks and make other changes.